@page "/usercalendar"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>User Calendar</h1>

@if (filteredEvents == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DataGrid TItem="FilteredEvent"
          Data="@filteredEvents"
          @bind-SelectedRow="@selectedFilteredEvent"
          Responsive>
    <DataGridCommandColumn TItem="FilteredEvent" />
    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.Subject)" Caption="Subject" Sortable="true" />
    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.Start.DateTime)" Caption="Start" Editable="false" />
    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.End.DateTime)" Caption="End" Editable="false" />
    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.Location.DisplayName)" Caption="Location" Editable="false" />
    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.Sensitivity)" Caption="Sensitivity" Editable="false"/>
@*    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.IsAllDay)" Caption="IsAllDay" Editable="false"/>
    <DataGridColumn TItem="FilteredEvent" Field="@nameof(FilteredEvent.ShowAs)" Caption="ShowAs" Editable="false"/>*@
</DataGrid>
}

@code {
    private List<FilteredEvent> filteredEvents;
     private FilteredEvent selectedFilteredEvent;

    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("getAntiForgeryToken");

        Http.DefaultRequestHeaders.Add("X-XSRF-TOKEN", token);

        filteredEvents = await Http.GetFromJsonAsync<List<FilteredEvent>>("api/GraphApiCalls/UserCalendar");
    }

}
