@page "/usercalendar"
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h4>Calendar Events</h4>

@if (filteredEvents == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <DataGrid TItem="FilteredEventDto"
          Data="@filteredEvents" Bordered="true"
          @bind-SelectedRow="@selectedFilteredEvent"
          Responsive>
    <DataGridCommandColumn TItem="FilteredEventDto" />
    <DataGridColumn TItem="FilteredEventDto" Field="@nameof(FilteredEventDto.Subject)" Caption="Subject" Sortable="true" />
    <DataGridColumn TItem="FilteredEventDto" Field="@nameof(FilteredEventDto.Start)" Caption="Start" Editable="false" />
    <DataGridColumn TItem="FilteredEventDto" Field="@nameof(FilteredEventDto.End)" Caption="End" Editable="false" />
    <DataGridColumn TItem="FilteredEventDto" Field="@nameof(FilteredEventDto.Sensitivity)" Caption="Sensitivity" Editable="false"/>
    <DataGridColumn TItem="FilteredEventDto" Field="@nameof(FilteredEventDto.IsAllDay)" Caption="IsAllDay" Editable="false"/>
    <DataGridColumn TItem="FilteredEventDto" Field="@nameof(FilteredEventDto.ShowAs)" Caption="ShowAs" Editable="false"/>
</DataGrid>
}

@code {
    private List<FilteredEventDto> filteredEvents;
     private FilteredEventDto selectedFilteredEvent;

    protected override async Task OnInitializedAsync()
    {
        var token = await JSRuntime.InvokeAsync<string>("getAntiForgeryToken");

        Http.DefaultRequestHeaders.Add("X-XSRF-TOKEN", token);

        filteredEvents = await Http.GetFromJsonAsync<List<FilteredEventDto>>("api/GraphApiCalls/UserCalendar");
    }

}
